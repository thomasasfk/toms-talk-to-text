name: CI/CD

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type (patch, minor, major)'
        required: true
        default: 'patch'

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    - name: Build executable
      run: pyinstaller --onefile --icon=icon.ico --add-data "icon.ico;." --noconsole -n=tttt main.py
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: tttt
        path: ./dist/tttt.exe

  release:
    needs: build
    if: github.event_name == 'workflow_dispatch'
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: tttt
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install semver
    - name: Bump version and push tag
      id: bump_version
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        $current_version = Get-Content version.txt
        $new_version = python -c "import semver; print(str(semver.VersionInfo.parse('$current_version').bump_${{ github.event.inputs.release_type }}()))"
        Set-Content -Path version.txt -Value $new_version
        git add version.txt
        git commit -m "Bump version to $new_version"
        git push
        git tag v$new_version
        git push origin v$new_version
        echo "::set-output name=new_version::$new_version"
      shell: pwsh
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.bump_version.outputs.new_version }}
        release_name: Release v${{ steps.bump_version.outputs.new_version }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./tttt.exe
        asset_name: tttt.exe
        asset_content_type: application/octet-stream